import telebot
from telebot import types
from telebot.types import Message
import html
# token del tuo bot
TOKEN = '5982966740:AAF1RejrSPg54ofNzWquYRJORP0EFg13b30'
destinatario_id = "506336274"
# istanza del bot
bot = telebot.TeleBot(TOKEN)


# comando /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    # nome utente del mittente
    user_first_name = message.from_user.first_name
    # messaggio di benvenuto
    welcome_message = f"Ciao {user_first_name}, io sono <b>TimeseaBot</b> e sono il Bot ufficiale del canale @Timesea.\nPer maggiori informazioni premi su <b>Info.</b>\nSe invece vuoi sapere cosa posso fare puoi premere su <b>Utilizzo.\nSe vuoi conoscere le tematiche che tratta il canale, puoi recarti al seguente link: https://telegra.ph/TimeseaBot-02-17.</b>" #{bot.get_me().first_name} mettere al posto di Timeseabot

    # tastiera inline
    inline_keyboard = types.InlineKeyboardMarkup(row_width=2)
    info_button = types.InlineKeyboardButton(text='üìå Info', callback_data='info')
    howto_button = types.InlineKeyboardButton(text='üåÄ Utilizzo', callback_data='howto')
    inline_keyboard.add(info_button, howto_button)
    # invio messaggio di benvenuto con tastiera inline
    bot.send_message(message.chat.id, welcome_message, reply_markup=inline_keyboard, parse_mode='HTML')


# gestione callback query per la tastiera inline

@bot.callback_query_handler(func=lambda call: True)
def handle_callback_query(call):
    # pulsante Info
    if call.data == 'info':
        info_message = "<b>Bot creato da @Ctonio x @Timesea</b> üëÅ‚Äçüó®\n<b>Stato: Attivo</b> ‚úÖ\n<pre>Versione attuale: 1.0.0</pre>"
        inline_keyboard = types.InlineKeyboardMarkup()
        back_button = types.InlineKeyboardButton(text='‚¨ÖÔ∏è Indietro', callback_data='back')
        inline_keyboard.add(back_button)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=info_message, reply_markup=inline_keyboard, parse_mode='HTML')

    # pulsante Howto
    elif call.data == 'howto':
        howto_message = "<b>üìç Come utilizzare:</b>\n\n<i>Usare il comando /sendpic e successivamente inviare un immagine, il bot la inoltrer√† al creatore del canale.\nSe l'immagine <b>viene ritenuta pertinente nei confronti delle tematiche trattate su @Timesea</b>, allora l'immagine verr√† postata nel canale.</i>\n\nPer lasciare un messaggio all'amministratore puoi utilizzare il comando <i>/add (messaggio).</i>"
        inline_keyboard = types.InlineKeyboardMarkup()
        back_button = types.InlineKeyboardButton(text='‚¨ÖÔ∏è Indietro', callback_data='back')
        inline_keyboard.add(back_button)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=howto_message, reply_markup=inline_keyboard, parse_mode='HTML')
    # pulsante Back
    elif call.data == 'back':
        user_first_name = call.message.chat.first_name
        welcome_message = f"Ciao {user_first_name}, io sono <b>TimeseaBot</b> e sono il Bot ufficiale del canale @Timesea.\nPer maggiori informazioni premi su <b>Info.</b>\nSe invece vuoi sapere cosa posso fare puoi premere su <b>Utilizzo.\nSe vuoi conoscere le tematiche che tratta il canale, puoi recarti al seguente link: https://telegra.ph/TimeseaBot-02-17.</b>"
        inline_keyboard = types.InlineKeyboardMarkup(row_width=2)
        info_button = types.InlineKeyboardButton(text='üìå Info', callback_data='info')
        howto_button = types.InlineKeyboardButton(text='üåÄ Utilizzo', callback_data='howto')
        inline_keyboard.add(info_button, howto_button)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=welcome_message, reply_markup=inline_keyboard, parse_mode='HTML')


# Gestore del comando /sendpic

# Gestore del comando /sendpic
# Gestore del comando /sendpic
@bot.message_handler(commands=['sendpic'])
def send_pic(message):
    chat_id = message.chat.id

    if message.chat.type == 'private':
        bot.send_message(chat_id, "Richiesta di inoltro immagine ricevuta. üì∏\nOra puoi mandarmi l'immagine che vuoi inoltrare.")
        bot.register_next_step_handler(message, process_pic_step)
    else:
        bot.send_message(chat_id, "Questo comando pu√≤ essere utilizzato solo in chat privata.")


# Gestore del passaggio successivo
def process_pic_step(message):
    chat_id = message.chat.id
    if message.content_type == 'photo':
        try:
            bot.forward_message(destinatario_id, chat_id, message.message_id)
            bot.send_message(chat_id, "Immagine inoltrata con successo ‚úÖ")
            bot.send_message(destinatario_id, "Immagine inoltrata da @" + message.from_user.username)
        except Exception as e:
            bot.send_message(chat_id, "Impossibile inoltrare l'immagine. Riprova pi√π tardi ‚ùóÔ∏è")
    else:
        bot.send_message(chat_id, "Immagine non inviata ‚ùå")


# Definisci il comando /add
@bot.message_handler(commands=['add'])
def send_text(message):
    # Ottieni l'ID del chat del mittente
    chat_id = message.chat.id

    try:
        # Prendi il testo inserito dall'utente dopo il comando /add
        text = message.text.split(maxsplit=1)[1]
    except IndexError:
        # Se l'utente non ha inserito un testo, invia un messaggio di errore
        bot.reply_to(message, "Il comando corretto √®: <pre>/add &lt;testo&gt;</pre>", parse_mode='HTML')
        return

    # Codifica il testo in HTML
    encoded_text = html.escape(text)

    # Inoltra il testo al destinatario specifico
    sent = bot.send_message('506336274', encoded_text, parse_mode='HTML')

    if sent:
        # Se il messaggio √® stato inoltrato, invia un messaggio di conferma al mittente
        bot.reply_to(message, "Messaggio inoltrato con successo ‚úÖ")
    else:
        # Se il messaggio non √® stato inoltrato, invia un messaggio di errore
        bot.reply_to(message, "Messaggio non inoltrato ‚ùå", parse_mode='HTML')

if __name__ == '__main__':
    while True:
        try:
            bot.polling()
        except Exception as e:
            print(f"Si √® verificato un errore: {e}")
            continue
